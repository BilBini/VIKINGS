"use client"

// This is a simple translation hook
// In a real application, you would use a more robust solution like next-intl or i18next

const translations = {
  english: {
    newChat: "Let's Chat",
    history: "History",
    account: "Account",
    settings: "Settings",
    talkToYourAI: "Talk to your AI",
    assistantDescription:
      "Talk with your AI Wellness Assistant to help you tackle and reduce your mental health stigma.",
    inputPlaceholder: "Write here [Example: I have been stressed and ...]",
    aiModelSettings: "AI Model Settings",
    openaiApiKey: "OpenAI API Key",
    geminiApiKey: "Gemini API Key",
    aiSystemPrompt: "AI System Prompt",
    systemPrompt: "System Prompt",
    systemPromptPlaceholder: "Enter the instructions for how the AI should behave...",
    voiceSettings: "Voice Settings",
    elevenlabsApiKey: "ElevenLabs API Key",
    voiceId: "Voice ID",
    metahumanSettings: "Metahuman Settings",
    epicGamesApiKey: "Epic Games API Key",
    metahumanId: "Metahuman ID",
    renderQuality: "Render Quality",
    low: "Low",
    medium: "Medium",
    high: "High",
    speechToTextSettings: "Speech-to-Text Settings",
    googleCloudApiKey: "Google Cloud API Key",
    preferredLanguage: "Preferred Language",
    saveSettings: "Save Settings",
    apiKeyMissing: "API key for {model} is missing. Please add it in Settings.",
    settingsSaved: "Settings saved successfully!",
    selectAiModel: "Select AI Model",
    selectModel: "Select a model",
    apiKey: "API Key",
    apiUrl: "API URL",
    predefinedPrompt: "Predefined System Prompt (Read-only)",
    noHistory: "No chat history yet",
    predefinedPromptNote: "This system prompt is predefined and cannot be changed.",
  },
  francais: {
    newChat: "Discutons",
    history: "Historique",
    account: "Compte",
    settings: "Paramètres",
    talkToYourAI: "Parlez à votre IA",
    assistantDescription:
      "Discutez avec votre Assistant IA de Bien-être pour vous aider à faire face et réduire votre stigmatisation en matière de santé mentale.",
    inputPlaceholder: "Écrivez ici [Exemple: Je suis stressé et ...]",
    aiModelSettings: "Paramètres du Modèle IA",
    openaiApiKey: "Clé API OpenAI",
    geminiApiKey: "Clé API Gemini",
    aiSystemPrompt: "Instruction Système pour l'IA",
    systemPrompt: "Instruction Système",
    systemPromptPlaceholder: "Entrez les instructions sur la façon dont l'IA devrait se comporter...",
    voiceSettings: "Paramètres Vocaux",
    elevenlabsApiKey: "Clé API ElevenLabs",
    voiceId: "ID de Voix",
    metahumanSettings: "Paramètres Metahuman",
    epicGamesApiKey: "Clé API Epic Games",
    metahumanId: "ID Metahuman",
    renderQuality: "Qualité de Rendu",
    low: "Basse",
    medium: "Moyenne",
    high: "Haute",
    speechToTextSettings: "Paramètres de Reconnaissance Vocale",
    googleCloudApiKey: "Clé API Google Cloud",
    preferredLanguage: "Langue Préférée",
    saveSettings: "Enregistrer les Paramètres",
    apiKeyMissing: "La clé API pour {model} est manquante. Veuillez l'ajouter dans les Paramètres.",
    settingsSaved: "Paramètres enregistrés avec succès!",
    selectAiModel: "Sélectionner le Modèle IA",
    selectModel: "Sélectionner un modèle",
    apiKey: "Clé API",
    apiUrl: "URL de l'API",
    predefinedPrompt: "Instruction Système Prédéfinie (Lecture seule)",
    noHistory: "Pas encore d'historique de chat",
    predefinedPromptNote: "Cette instruction système est prédéfinie et ne peut pas être modifiée.",
  },
  arabic: {
    newChat: "محادثة جديدة",
    history: "السجل",
    account: "الحساب",
    settings: "الإعدادات",
    talkToYourAI: "تحدث إلى الذكاء الاصطناعي",
    assistantDescription:
      "تحدث مع مساعد الذكاء الاصطناعي للصحة النفسية لمساعدتك في التغلب على وتقليل وصمة العار المرتبطة بالصحة النفسية.",
    inputPlaceholder: "اكتب هنا [مثال: لقد كنت متوتراً و ...]",
    aiModelSettings: "إعدادات نموذج الذكاء الاصطناعي",
    openaiApiKey: "مفتاح API لـ OpenAI",
    geminiApiKey: "مفتاح API لـ Gemini",
    aiSystemPrompt: "تعليمات النظام للذكاء الاصطناعي",
    systemPrompt: "تعليمات النظام",
    systemPromptPlaceholder: "أدخل التعليمات حول كيفية تصرف الذكاء الاصطناعي...",
    voiceSettings: "إعدادات الصوت",
    elevenlabsApiKey: "مفتاح API لـ ElevenLabs",
    voiceId: "معرف الصوت",
    metahumanSettings: "إعدادات Metahuman",
    epicGamesApiKey: "مفتاح API لـ Epic Games",
    metahumanId: "معرف Metahuman",
    renderQuality: "جودة العرض",
    low: "منخفضة",
    medium: "متوسطة",
    high: "عالية",
    speechToTextSettings: "إعدادات تحويل الكلام إلى نص",
    googleCloudApiKey: "مفتاح API لـ Google Cloud",
    preferredLanguage: "اللغة المفضلة",
    saveSettings: "حفظ الإعدادات",
    apiKeyMissing: "مفتاح API لـ {model} مفقود. يرجى إضافته في الإعدادات.",
    settingsSaved: "تم حفظ الإعدادات بنجاح!",
    selectAiModel: "اختر نموذج الذكاء الاصطناعي",
    selectModel: "اختر نموذجًا",
    apiKey: "مفتاح API",
    apiUrl: "عنوان URL للواجهة البرمجية",
    predefinedPrompt: "تعليمات النظام المحددة مسبقًا (للقراءة فقط)",
    noHistory: "لا يوجد سجل محادثات بعد",
    predefinedPromptNote: "تعليمات النظام هذه محددة مسبقًا ولا يمكن تغييرها.",
  },
}

export function useTranslation(language: string) {
  // Default to English if the language is not supported
  const currentLanguage = translations[language as keyof typeof translations] || translations.english

  return {
    t: (key: string) => {
      return currentLanguage[key as keyof typeof currentLanguage] || key
    },
  }
}
